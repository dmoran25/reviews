import streamlit as st

def calculate_new_rating(current_rating, total_reviews, target_rating):
    """
    Calculates the number of 5-star reviews needed to reach the target rating.
    """
    current_total = current_rating * total_reviews
    new_reviews_needed = 0

    while (current_total + (5 * new_reviews_needed)) / (total_reviews + new_reviews_needed) < target_rating:
        new_reviews_needed += 1

    return new_reviews_needed

def estimate_revenue_increase(new_reviews_needed, clv):
    """
    Estimates the additional revenue generated by acquiring more reviews.
    Assumes each review gets ~100 views per month and influences potential buyers.
    """
    estimated_revenue = new_reviews_needed * 100 * 0.05 * clv  # 100 views/month * 5% conversion * CLV
    return estimated_revenue

# Streamlit UI
st.title("📊 Google Reviews & Revenue Impact Calculator")

st.sidebar.header("Step 1 of 2: Input Your Business Data")
current_rating = st.sidebar.slider("⭐ Current Google Rating", 1.0, 5.0, 4.2, 0.1)
total_reviews = st.sidebar.number_input("📌 Current Number of Google Reviews", min_value=1, value=100, step=1)
target_rating = st.sidebar.slider("🎯 Desired Google Rating", 1.0, 5.0, 4.6, 0.1)
clv = st.sidebar.number_input("💰 Lifetime Customer Value ($)", min_value=10, value=1000, step=10)

# Calculations
reviews_needed = calculate_new_rating(current_rating, total_reviews, target_rating)
revenue_increase = estimate_revenue_increase(reviews_needed, clv)

# Display results
st.subheader("🔍 Review Growth Insights")
st.write(f"⭐ **5-Star Reviews Needed to Reach {target_rating}:** {reviews_needed}")
st.write(f"💰 **Estimated Monthly Revenue Increase:** ${revenue_increase:,.2f}")

st.markdown("---")
st.markdown("💡 *Optimize your Google Business Profile and leverage reviews to drive more revenue!*")
